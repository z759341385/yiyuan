{"remainingRequest":"/Users/zhc/project/yiyuan/node_modules/babel-loader/lib/index.js!/Users/zhc/project/yiyuan/node_modules/ts-loader/index.js??ref--14-2!/Users/zhc/project/yiyuan/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhc/project/yiyuan/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhc/project/yiyuan/src/views/fire/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/zhc/project/yiyuan/src/views/fire/index.vue","mtime":1635209544912},{"path":"/Users/zhc/project/yiyuan/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhc/project/yiyuan/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/zhc/project/yiyuan/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/zhc/project/yiyuan/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhc/project/yiyuan/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/zhc/project/yiyuan/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhc/project/yiyuan/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhc/project/yiyuan/src/views/fire/index.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from \"vue-property-decorator\";\nimport Header from \"@/components/Header.vue\";\nimport { fireList, fireChecklist, fireDevlist, fireUserlist, addFireCheck } from \"@/api/index\";\n\n@Component({\n  name: \"FireInfo\",\n  components: { Header },\n})\nexport default class extends Vue {\n  info: any = {\n    fireControl: {\n      contorlPic: \"\",\n    },\n  };\n  chickpage: any = {\n    pageNo: 1,\n    pageSize: 30,\n  };\n\n  titleList = [\n    { label: \"检查内容\", eng: \"name\", style: \"flex: 1\" },\n    { label: \"检查人\", eng: \"sex\", style: \"flex: 1\" },\n    { label: \"检查时间\", eng: \"sex\", style: \"flex: 2\" },\n  ];\n\n  equipment = \"\";\n  equipments = [];\n\n  checker = \"\";\n  checkers = [];\n  isLoading = false;\n\n  mounted() {\n    this.getData();\n    this.getFireChecklist();\n    this.getFireDevlist();\n    this.getFireUserlist();\n  }\n\n  async getData() {\n    const pid = this.$route.query.nurseDepId;\n    const res = await fireList({ nurseDepId: pid });\n    this.info = res;\n  }\n\n  async getFireChecklist() {\n    const pid = this.$route.query.nurseDepId;\n    const res: any = await fireChecklist({ nurseDepId: pid, pageNo: this.chickpage.pageNo, pageSize: this.chickpage.pageSize });\n    this.chickpage = Object.assign({}, this.chickpage, res.chickpage);\n  }\n\n  async getFireDevlist() {\n    const pid = this.$route.query.nurseDepId;\n    const res: any = await fireDevlist({ nurseDepId: pid });\n    this.equipments = res;\n  }\n\n  async getFireUserlist() {\n    const pid = this.$route.query.nurseDepId;\n    const res: any = await fireUserlist({ nurseDepId: pid });\n    this.checkers = res;\n  }\n\n  async commit() {\n    if (!this.equipment) {\n      this.$message.error(\"请选择设备\");\n      return;\n    }\n    if (!this.checker) {\n      this.$message.error(\"请选择检查人\");\n      return;\n    }\n    try {\n      this.isLoading = true;\n      const pid = this.$route.query.nurseDepId;\n      await addFireCheck({ nurseDepId: pid, devId: this.equipment, userId: this.checker });\n      this.$message.success(\"添加成功\");\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  handleCurrentChange() {\n    this.getFireChecklist();\n  }\n}\n"],"sourceRoot":""}]}